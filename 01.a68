PRIO STARTSWITH = 9;

OP STARTSWITH = (STRING s, STRING pat) BOOL:
BEGIN
    IF UPB s < UPB pat THEN
        FALSE
    ELSE
        BOOL ok := TRUE;
        FOR i TO UPB pat WHILE ok DO
            ok := pat[i] = s[i]
        OD;
        ok
    FI
END;

BEGIN
    INT part 1 total := 0, part 2 total := 0;
    []STRING numbers = ("one", "two", "three", "four", "five", "six", "seven", "eight", "nine");

    on logical file end(stand in, (REF FILE f) BOOL: GOTO end);

    DO
        STRING line;
        get(stand in, line);
        get(stand in, new line);

        INT part 1 first digit := 0, part 1 last digit := 0;
        INT part 2 first digit := 0, part 2 last digit := 0;

        FOR i TO UPB line DO
            IF line[i] >= "0" AND line[i] <= "9" THEN
                INT digit = ABS line[i] - ABS "0";

                (part 1 first digit = 0 | part 1 first digit := digit);
                (part 2 first digit = 0 | part 2 first digit := digit);

                part 1 last digit := digit;
                part 2 last digit := digit
            ELSE
                FOR digit TO UPB numbers DO
                    IF line[i:] STARTSWITH numbers[digit] THEN
                        (part 2 first digit = 0 | part 2 first digit := digit);
                        part 2 last digit := digit
                    FI
                OD
            FI
        OD;

        part 1 total +:= part 1 first digit * 10 + part 1 last digit;
        part 2 total +:= part 2 first digit * 10 + part 2 last digit
    OD;

    end:
    print(("part 1:", part 1 total, new line, "part 2:", part 2 total, new line))
END
